<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- MQ 生产者配置 -->

    <!-- Active MQ 连接工厂 -->
    <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
    <bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${mq.producer.address}"/>
        <property name="useAsyncSend" value="true"/>
        <property name="alwaysSessionAsync" value="true"/>
        <property name="useDedicatedTaskRunner" value="true"/>
        <!-- 重发机制配置 (消费者消费失败时起效)-->
        <property name="redeliveryPolicy">
            <bean id="redeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
                <!--是否在每次尝试重新发送失败后,增长这个等待时间-->
                <property name="useExponentialBackOff" value="true"/>
                <!--重发次数,默认为6次-->
                <property name="maximumRedeliveries" value="${mq.redelivery.maximumRedeliveries}"/>
                <!--重发时间间隔,默认为1秒-->
                <property name="initialRedeliveryDelay" value="${mq.redelivery.initialRedeliveryDelay}"/>
                <!--第一次失败后重新发送之前等待500毫秒,第二次失败再等待500 * 2毫秒,这里的2就是value-->
                <property name="backOffMultiplier" value="2"/>
                <!--最大传送延迟，只在useExponentialBackOff为true时有效（V5.5），假设首次重连间隔为10ms，倍数为2，
                那么第 二次重连时间间隔为 20ms，第三次重连时间间隔为40ms，当重连时间间隔大的最大重连时间间隔时，以后每次重连时间间隔都为最大重连时间间隔。-->
                <property name="maximumRedeliveryDelay" value="1000"/>
                <property name="tempQueue" value="true"/>
                <property name="tempTopic" value="true"/>
            </bean>
        </property>
    </bean>

    <!-- Spring Caching连接工厂 -->
    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="activeMQConnectionFactory"/>
        <property name="sessionCacheSize" value="${mq.session.cache}"/>
    </bean>

    <!-- 定义JmsTemplate的Queue类型 -->
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
        <constructor-arg ref="connectionFactory"/>
        <!-- 非pub/sub模型（发布/订阅），即队列模式 -->
        <property name="pubSubDomain" value="false"/>
    </bean>

    <!-- 定义JmsTemplate的Topic类型 -->
    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
        <constructor-arg ref="connectionFactory"/>
        <!-- pub/sub模型（发布/订阅） -->
        <property name="pubSubDomain" value="true"/>
    </bean>

</beans>